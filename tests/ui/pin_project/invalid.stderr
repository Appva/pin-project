error: unexpected token: ()
 --> $DIR/invalid.rs:6:14
  |
6 |         #[pin()] //~ ERROR unexpected token
  |              ^^

error: unexpected token: (foo)
  --> $DIR/invalid.rs:11:29
   |
11 |     struct Unexpected2(#[pin(foo)] ()); //~ ERROR unexpected token
   |                             ^^^^^

error: unexpected token: (foo)
  --> $DIR/invalid.rs:15:16
   |
15 |         V(#[pin(foo)] ()), //~ ERROR unexpected token
   |                ^^^^^

error: unexpected token: (foo)
  --> $DIR/invalid.rs:21:18
   |
21 |             #[pin(foo)] //~ ERROR unexpected token
   |                  ^^^^^

error: expected identifier
  --> $DIR/invalid.rs:26:31
   |
26 |     #[pin_project(UnsafeUnpin,,)] //~ ERROR expected identifier
   |                               ^

error: unexpected argument: Foo
  --> $DIR/invalid.rs:32:19
   |
32 |     #[pin_project(Foo)] //~ ERROR unexpected argument
   |                   ^^^

error: duplicate `UnsafeUnpin` argument
  --> $DIR/invalid.rs:44:32
   |
44 |     #[pin_project(UnsafeUnpin, UnsafeUnpin)] //~ ERROR duplicate `UnsafeUnpin` argument
   |                                ^^^^^^^^^^^

error: duplicate `PinnedDrop` argument
  --> $DIR/invalid.rs:50:31
   |
50 |     #[pin_project(PinnedDrop, PinnedDrop)] //~ ERROR duplicate `PinnedDrop` argument
   |                               ^^^^^^^^^^

error: duplicate `Replace` argument
  --> $DIR/invalid.rs:56:28
   |
56 |     #[pin_project(Replace, Replace)] //~ ERROR duplicate `Replace` argument
   |                            ^^^^^^^

error: duplicate `UnsafeUnpin` argument
  --> $DIR/invalid.rs:62:44
   |
62 |     #[pin_project(PinnedDrop, UnsafeUnpin, UnsafeUnpin)] //~ ERROR duplicate `UnsafeUnpin` argument
   |                                            ^^^^^^^^^^^

error: duplicate `PinnedDrop` argument
  --> $DIR/invalid.rs:68:44
   |
68 |     #[pin_project(PinnedDrop, UnsafeUnpin, PinnedDrop, PinnedDrop)] //~ ERROR duplicate `PinnedDrop` argument
   |                                            ^^^^^^^^^^

error: arguments `PinnedDrop` and `Replace` are mutually exclusive
  --> $DIR/invalid.rs:74:31
   |
74 |     #[pin_project(PinnedDrop, Replace)] //~ ERROR arguments `PinnedDrop` and `Replace` are mutually exclusive
   |                               ^^^^^^^

error: #[pin] attribute may only be used on fields of structs or variants
  --> $DIR/invalid.rs:85:5
   |
85 |     #[pin] //~ ERROR may only be used on fields of structs or variants
   |     ^^^^^^

error: #[pin] attribute may only be used on fields of structs or variants
  --> $DIR/invalid.rs:93:9
   |
93 |         #[pin] //~ ERROR may only be used on fields of structs or variants
   |         ^^^^^^

error: #[pin] attribute may only be used on fields of structs or variants
  --> $DIR/invalid.rs:98:5
   |
98 |     #[pin] //~ ERROR may only be used on fields of structs or variants
   |     ^^^^^^

error: duplicate #[pin] attribute
   --> $DIR/invalid.rs:106:9
    |
106 |         #[pin] //~ ERROR duplicate #[pin] attribute
    |         ^^^^^^

error: duplicate #[pin] attribute
   --> $DIR/invalid.rs:113:9
    |
113 |         #[pin]
    |         ^^^^^^

error: duplicate #[pin] attribute
   --> $DIR/invalid.rs:122:13
    |
122 |             #[pin] //~ ERROR duplicate #[pin] attribute
    |             ^^^^^^

error: duplicate #[pin] attribute
   --> $DIR/invalid.rs:131:13
    |
131 |             #[pin]
    |             ^^^^^^

error: duplicate #[pin_project] attribute
   --> $DIR/invalid.rs:142:5
    |
142 |     #[pin_project] //~ ERROR duplicate #[pin_project] attribute
    |     ^^^^^^^^^^^^^^

error: #[pin_project] attribute may not be used on structs with zero fields
   --> $DIR/invalid.rs:149:19
    |
149 |     struct Struct {} //~ ERROR may not be used on structs with zero fields
    |                   ^^

error: #[pin_project] attribute may not be used on structs with zero fields
   --> $DIR/invalid.rs:152:23
    |
152 |     struct TupleStruct(); //~ ERROR may not be used on structs with zero fields
    |                       ^^

error: #[pin_project] attribute may not be used on structs with zero fields
   --> $DIR/invalid.rs:155:12
    |
155 |     struct UnitStruct; //~ ERROR may not be used on structs with zero fields
    |            ^^^^^^^^^^

error: #[pin_project] attribute may not be used on enums without variants
   --> $DIR/invalid.rs:158:20
    |
158 |     enum EnumEmpty {} //~ ERROR may not be used on enums without variants
    |                    ^^

error: #[pin_project] attribute may not be used on enums with discriminants
   --> $DIR/invalid.rs:162:13
    |
162 |         V = 2, //~ ERROR may not be used on enums with discriminants
    |             ^

error: #[pin_project] attribute may not be used on enums with zero fields
   --> $DIR/invalid.rs:167:9
    |
167 | /         Unit, //~ ERROR may not be used on enums with zero fields
168 | |         Tuple(),
169 | |         Struct {},
    | |__________________^

error: #[pin_project] attribute may only be used on structs or enums
   --> $DIR/invalid.rs:173:5
    |
173 | /     union Union {
174 | |         //~^ ERROR may only be used on structs or enums
175 | |         f: (),
176 | |     }
    | |_____^
